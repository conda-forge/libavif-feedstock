# NOTE: Humans must also update the library version in the tests section of this recipe
{% set version = "1.2.1" %}
# Look in the libavif top level CMakeLists.txt for the updated library
# version (not the same as the project version) to update parameters for existence checks
# The SO name changes every version https://github.com/AOMediaCodec/libavif/issues/799
{% set so_version = "16." ~ version.split('.')[1] ~ "." ~ version.split('.')[2] %}
{% set so_major_version = so_version.split('.')[0] %}

package:
  name: libavif-split
  version: {{ version }}

source:
  url: https://github.com/AOMediaCodec/libavif/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 9c859c7c12ccb0f407511bfe303e6a7247f5f6738f54852662c6df8048daddf4

build:
  number: 2

requirements:
  build:
    - cmake
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - ninja
    - m2-sed  # [win]
  host:
    - aom
    - dav1d
    # - libpng
    # - jpeg
    - rav1e
    - svt-av1

outputs:
  - name: libavif
    script: install.py
    build:
      run_exports:
        - {{ pin_subpackage('libavif' ~ so_major_version) }}
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - ninja
      host:
        - aom
        - dav1d
        # - libpng
        # - jpeg
        - rav1e
        - svt-av1
      run:
        - {{ pin_subpackage('libavif' ~ so_major_version, exact=True) }}
    test:
      commands:
        - test -f ${PREFIX}/include/avif/avif.h                         # [unix]
        - if not exist %PREFIX%\\Library\\include\\avif\\avif.h exit 1  # [win]
        - test -f ${PREFIX}/lib/libavif${SHLIB_EXT}                   # [unix]
        - test -f ${PREFIX}/lib/libavif.so.{{ so_major_version }}     # [linux]
        - test -f ${PREFIX}/lib/libavif.so.{{ so_version }}           # [linux]
        - test -f ${PREFIX}/lib/libavif.{{ so_major_version }}.dylib  # [osx]
        - test -f ${PREFIX}/lib/libavif.{{ so_version }}.dylib        # [osx]
        - if not exist %PREFIX%\\Library\\bin\\avif.dll exit 1        # [win]
        - if not exist %PREFIX%\\Library\\lib\\avif.lib exit 1        # [win]
        - test -f ${PREFIX}/lib/pkgconfig/libavif.pc                         # [unix]
        - if not exist %PREFIX%\\Library\\lib\\pkgconfig\\libavif.pc exit 1  # [win]
        - test -f ${PREFIX}/lib/cmake/libavif/libavif-config.cmake           # [unix]
        - test -f ${PREFIX}/lib/cmake/libavif/libavif-config-release.cmake   # [unix]
        - test -f ${PREFIX}/lib/cmake/libavif/libavif-config-version.cmake   # [unix]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\libavif\\libavif-config.cmake exit 1          # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\libavif\\libavif-config-release.cmake exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\cmake\\libavif\\libavif-config-version.cmake exit 1  # [win]

  - name: libavif{{ so_major_version }}
    script: install.py
    build:
      run_exports:
        - {{ pin_subpackage('libavif' ~ so_major_version) }}
    requirements:
      build:
        - cmake
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - ninja
      host:
        - aom
        - dav1d
        # - libpng
        # - jpeg
        - rav1e
        - svt-av1
      run:
        - {{ pin_subpackage('_libavif_api', max_pin='x.x.x') }}               # [win]
    test:
      commands:
      # Need these
        - test -f ${PREFIX}/lib/libavif.so.{{ so_major_version }}             # [linux]
        - test -f ${PREFIX}/lib/libavif.so.{{ so_version }}                   # [linux]
        - test -f ${PREFIX}/lib/libavif.{{ so_major_version }}.dylib          # [osx]
        - test -f ${PREFIX}/lib/libavif.{{ so_version }}.dylib                # [osx]
        - if not exist %PREFIX%\\Library\\bin\\avif.dll exit 1                # [win]
      # Exclude these
        - test ! -f ${PREFIX}/include/avif/avif.h                             # [unix]
        - test ! -f ${PREFIX}/lib/libavif{{ SHLIB_EXT }}                      # [unix]
        - test ! -f ${PREFIX}/lib/pkgconfig/libavif.pc                        # [unix]
        - test ! -f ${PREFIX}/lib/cmake/libavif/libavif-config.cmake          # [unix]
        - test ! -f ${PREFIX}/lib/cmake/libavif/libavif-config-release.cmake  # [unix]
        - test ! -f ${PREFIX}/lib/cmake/libavif/libavif-config-version.cmake  # [unix]
        - if exist %PREFIX%\\Library\\lib\\avif.lib exit 1                    # [win]

  # Clobber preventer for Windows; prevents multiple dll files from being
  # installed simultaneously. This lets us avoid exporting a strict pin on the
  # API which is not strictly correlated with the ABI.
  - name: _libavif_api
    build:
      skip: true  # [not win]
    about:
      summary: >
        An empty package that prevents multiple ABIs being installed simultaneously on Windows.

about:
  home: https://github.com/AOMediaCodec/libavif
  license: BSD-2-Clause
  license_family: BSD
  license_file: LICENSE
  summary: A friendly, portable C implementation of the AV1 Image File Format
  description: |
    This library aims to be a friendly, portable C implementation of the AV1
    Image File Format, as described here
    <https://aomediacodec.github.io/av1-avif/>.

extra:
  feedstock-name: libavif
  recipe-maintainers:
    - carterbox
    - hmaarrfk
